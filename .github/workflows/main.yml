name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Image Builder container
        uses: docker/build-push-action@v2.4.0
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: .
          file: Dockerfile
          load: true
          push: false
          tags: imagebuilder:latest

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Fill in the AWS template
        run: |
          cat shared/aws-template.toml | envsubst > shared/aws-config.toml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: major-aws-image-import
          AWS_DEFAULT_REGION: us-east-1

      - name: Start the Image Builder container
        run: |
          docker run --detach --rm --privileged \
            -v $(pwd)/shared:/repo \
            --name imagebuilder \
            imagebuilder
          
      - name: Wait for Image Builder to be fully running
        run: |
          for i in `seq 1 10`; do
            sleep 1
            docker exec -t imagebuilder composer-cli status show && break
          done

      - name: Push the zsh blueprint
        run: |
          docker exec -t imagebuilder composer-cli blueprints push /repo/zsh-blueprint.toml
          docker exec -t imagebuilder composer-cli blueprints list

      - name: Build the zsh image
        run: |
          #!/bin/bash
          docker exec -t imagebuilder journalctl -af &
          docker exec -t imagebuilder \
              composer-cli --json compose start zsh ami image-from-container /repo/aws-config.toml | tee compose_start.json

          COMPOSE_ID=$(jq -r '.build_id' compose_start.json)

          while true; do
              docker exec -t imagebuilder \
                  composer-cli --json compose info "${COMPOSE_ID}" | tee compose_info.json > /dev/null
              COMPOSE_STATUS=$(jq -r '.queue_status' compose_info.json)

              # Is the compose finished?
              if [[ $COMPOSE_STATUS != RUNNING ]] && [[ $COMPOSE_STATUS != WAITING ]]; then
                  echo "Compose finished."
                  break
              else
                  echo "Compose still running..."
              fi
              sleep 30
          done

          if [[ $COMPOSE_STATUS != FINISHED ]]; then
              echo "Something went wrong with the compose. ðŸ˜¢"
              exit 1
          fi
